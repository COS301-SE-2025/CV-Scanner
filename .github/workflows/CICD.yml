name: CI/CD

on:
  push:
    branches: [main, dev, API-3]
  pull_request:
    branches: [main, dev, API-3]

jobs:
  deploy:
    name: Build & Deploy All
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # -----------------------
      # Build Java API
      # -----------------------
      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('API/api/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Build API
        run: mvn -B -f API/api/pom.xml package

      # -----------------------
      # Build Python AI
      # -----------------------
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('AI/requirements*.txt') }}
          restore-keys: pip-${{ runner.os }}-

      - name: Install AI dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f AI/requirements.txt ]; then
            pip install -r AI/requirements.txt
          else
            pip install fastapi uvicorn pydantic pytest
          fi

      # -----------------------
      # Build React UI
      # -----------------------
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: UI/CV-Scanner/package-lock.json

      - name: Install UI dependencies
        working-directory: UI/CV-Scanner
        run: npm ci --legacy-peer-deps

      - name: Build React UI
        working-directory: UI/CV-Scanner
        run: npm run build

      # -----------------------
      # Deploy everything
      # -----------------------
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy API + AI + UI to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'cvscanner'      # your existing App Service
          slot-name: 'production'
          package: '.'               # deploy root folder including API, AI, UI/dist
